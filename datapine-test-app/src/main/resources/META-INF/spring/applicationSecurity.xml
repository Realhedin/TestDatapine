<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--import aclContext configuration -->
    <beans:import resource="aclContext.xml"/>

    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled" access-decision-manager-ref="businessAccessDecisionManager">
        <security:expression-handler ref="expressionHandler" /> <!-- needed to activate ACL -->
            </global-method-security>

    <http access-denied-page="/error403.jsp">
        <intercept-url pattern="/" access="ROLE_USER,ROLE_ADMIN,ROLE_ANONYMOUS" />
        <intercept-url pattern="/items/" access="ROLE_USER,ROLE_ADMIN"/>
        <intercept-url pattern="/items/*" access="ROLE_USER,ROLE_ADMIN"/>
        <intercept-url pattern="/users/" access="ROLE_USER,ROLE_ADMIN"/>
        <intercept-url pattern="/users/*" access="ROLE_ADMIN" />

        <form-login login-page="/login" default-target-url="/items/"
                    authentication-failure-url="/login?error=true"
                authentication-success-handler-ref="authSuccessHandler"
                authentication-failure-handler-ref="authFailureHandler"/>
        <logout logout-success-url="/login" />

        <anonymous username="guest" granted-authority="ROLE_ANONYMOUS" />
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <!--<user-service>-->
                <!--<user name="admin1" password="111" authorities="ROLE_ADMIN" />-->
                <!--<user name="user2" password="222" authorities="ROLE_USER" />-->
            <!--</user-service>-->
            <!--<jdbc-user-service data-source-ref="dataSource"-->
                    <!--users-by-username-query="SELECT email, password FROM users WHERE email=?"-->
                    <!--authorities-by-username-query="select email, role from users where email=?"/>-->
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="userDetailsService" class="com.datapine.service.TestUserDetailsService"/>

    <!--additional handlers for successful and failure login-->
    <beans:bean id="authSuccessHandler" class="com.datapine.service.PostSuccessfulAuthenticationHandler"/>
    <beans:bean id="authFailureHandler" class="com.datapine.service.PostFailureAuthenticationHandler"/>




    <!-- Decision manager uses two voters: one is role-based, another is ACL-based -->
    <beans:bean id="businessAccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <beans:property name="allowIfAllAbstainDecisions" value="true"/>
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter"/>
                <beans:ref local="aclReportAcceptVoter"/>
            </beans:list>
        </beans:property>
    </beans:bean>


    <!-- An access decision voter that reads ACL_REPORT_ACCEPT configuration settings -->
    <beans:bean id="aclReportAcceptVoter" class="org.springframework.security.acls.AclEntryVoter">
        <beans:constructor-arg ref="aclService"/>
        <beans:constructor-arg value="ACL_ADD_ITEM"/>
        <beans:constructor-arg>
            <util:list>
                <util:constant id="acceptPermission" static-field="com.datapine.acl.ExtendedPermission.ACCEPT"/>
            </util:list>
        </beans:constructor-arg>
        <beans:property name="internalMethod" value="getUser"/>
        <beans:property name="objectIdentityRetrievalStrategy">
            <beans:bean class="com.datapine.acl.UserNameRetrievalStrategy"/>
        </beans:property>

        <!-- We have to use Item here, so that voter find it in protected method parameters; "internalMethod" will convert it to User  -->
        <beans:property name="processDomainObjectClass" value="com.datapine.domain.Item"/>
    </beans:bean>

    <beans:bean id="aclService" class="com.datapine.acl.InMemoryAclServiceImpl"/>

</beans:beans>